{"version":3,"file":"scroll-adapter.js","sourceRoot":"","sources":["../../../src/directives/adapters/scroll-adapter.ts"],"names":[],"mappings":"AAEA,OAAO,EAAc,SAAS,EAAE,MAAM,MAAM,CAAC;AAC7C,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;;;;;;AAOpD;;;;;AAAA;IAII,uBAAmB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;6BAFjB,KAAK;KAGpB;IAED,gCAAQ,GAAR;QAAA,iBAOC;QANG,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,EAAE,QAAQ,CAAC;aAC/D,IAAI,CACD,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC,EAC9B,QAAQ,EAAE,EACV,GAAG,CAAC,UAAC,UAAU,IAAK,OAAA,KAAI,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAtD,CAAsD,CAAC,CAC9E,CAAC;KACT;IAED,oCAAY,GAAZ;QACI,MAAM,CAAC,CAAC,CAAC;KACZ;IAED,oCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,SAAS,CAAC;KAC7D;IAED,yCAAiB,GAAjB,UAAkB,aAAkB;QAChC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KACrF;IAED,uCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;KAC7B;wBAxCL;IAyCC,CAAA;;;;;;AA/BD,yBA+BC","sourcesContent":["import { IonAffixContainer } from '../ion-affix-container';\nimport { Scroll } from 'ionic-angular';\nimport { Observable, fromEvent } from 'rxjs';\nimport { map, pairwise, tap } from 'rxjs/operators';\n\n/**\n * Adapter for ion-scroll.\n *\n * @author Jonas Zuberbuehler <jonas.zuberbuehler@gmail.com>\n */\nexport class ScrollAdapter implements IonAffixContainer {\n\n    scrollingDown = false;\n\n    constructor(public scroll: Scroll) {\n    }\n\n    onScroll(): Observable<any> {\n        return fromEvent(this.scroll._scrollContent.nativeElement, 'scroll')\n            .pipe(\n                map(() => this.getScrollTop()),\n                pairwise(),\n                tap((scrollTops) => this.scrollingDown = scrollTops[0] - scrollTops[1] < 0)\n            );\n    }\n\n    getClientTop(): number {\n        return 0;\n    }\n\n    getScrollTop(): number {\n        return this.scroll._scrollContent.nativeElement.scrollTop;\n    }\n\n    appendFixedHeader(headerElement: any): void {\n        this.scroll._scrollContent.nativeElement.parentElement.appendChild(headerElement);\n    }\n\n    isScrollingDown(): boolean {\n        return this.scrollingDown;\n    }\n}\n"]}